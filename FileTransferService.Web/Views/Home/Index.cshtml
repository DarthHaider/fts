@{
    ViewData["Title"] = "Home Page";
}

<div class="toast-bar">
    <div id="upload-successful-toast" class="toast toast-bar-item" role="alert">
        <div class="toast-body alert-success">
            Upload successful!
        </div>
    </div>
    <div id="upload-unsuccessful-toast" class="toast toast-bar-item" role="alert">
        <div class="toast-body alert-danger">
            Upload failed.
        </div>
    </div>
</div>
<div class="mt-2 ps-5 pe-5">
    <form asp-controller="Home" asp-action="Upload" method="post" enctype="multipart/form-data" onsubmit="upload(this); return false;">
        <div class="mb-3">
            <label class="mb-1 text-secondary" for="uploadFileInput" id="uploadFileLabel">Select a file to upload:</label>
            <input class="form-control" name="uploadFile" id="uploadFileInput" type="file" />
        </div>
        <div style="text-align:end">
            <button class="btn btn-primary" id="uploadFileSubmitButton" type="submit" disabled></button>
        </div>
    </form>
</div>

@section Scripts {

    <script>

        const formSubmitButtonId = "uploadFileSubmitButton";
        const uploadFileInputId = "uploadFileInput";
        const formSubmitButtonTextSpan = document.createElement("span");
        const processingSpinnerSpan = document.createElement("span");
              processingSpinnerSpan.classList = "spinner-grow spinner-grow-sm";
              processingSpinnerSpan.role = "status";

        $(document).ready(() => {

            const formSubmitButton = document.getElementById(formSubmitButtonId);
            const uploadFileInput = document.getElementById(uploadFileInputId);

            $('.toast').toast({delay: 2000});

            uploadFileInput.addEventListener("input", event => {
                formSubmitButton.disabled = !(event.target.value.length > 0);
            });

            formSubmitButtonTextSpan.textContent = "Upload";
            formSubmitButton.innerHTML = "";
            formSubmitButton.appendChild(formSubmitButtonTextSpan);

        });

        async function upload(form) {

            console.log("form", form);

            const data = new FormData(form);
            const formSubmitButton = document.getElementById(formSubmitButtonId);
            const uploadFileInput = document.getElementById(uploadFileInputId);

            updateProcessingUI(formSubmitButton, uploadFileInput, true);

            try {
                const response = await fetch(form.action, {
                    method: "POST",
                    body: data
                });

                if(response.ok) {
                    updateProcessingUI(formSubmitButton, uploadFileInput, false);
                    $("#upload-successful-toast").toast("show");
                }
            }
            catch(error) {

            }
        }

        function updateProcessingUI(formSubmitButton, uploadFileInput, isProcessing) {
            
            formSubmitButton.innerHTML = "";
            if (isProcessing) {

                formSubmitButton.disabled = true;
                uploadFileInput.disabled = true;
                formSubmitButtonTextSpan.style = "margin-left: 1em;"
                formSubmitButtonTextSpan.tectContent = "Processing...";

                formSubmitButton.appendChild(processingSpinnerSpan);
                formSubmitButton.appendChild(formSubmitButtonTextSpan);

            } else {

                formSubmitButtonTextSpan.textContent = "Upload";
                formSubmitButtonTextSpan.style = "margin-left: 0;";

                formSubmitButton.innerHTML = "";
                formSubmitButton.appendChild(formSubmitButtonTextSpan);

                uploadFileInput.value = null;
                uploadFileInput.disabled = false;
            }

        }

    </script>

}


